from DAXXMUSIC import app 
import asyncio
import random
from pyrogram import Client, filters
from pyrogram.enums import ChatType, ChatMemberStatus
from pyrogram.errors import UserNotParticipant
from pyrogram.types import ChatPermissions

spam_chats = []

EMOJI = [ "ü™áü©∑üëª",
          "üßöüå∏üßãüç¨ü´ñ",
          "ü•Äüå∑üåπüå∫üíê",
          "üíõüå±üåµ",
          "‚ù§Ô∏èüíöüíôüíúüñ§",
          "üíìüéßüòúüíóüíñ",
          "üå∏üíêüå∫üåπü¶ã",
          "üçîü¶™üçõüç≤ü•ó",
          "üçéüçìüçíüçëüå∂Ô∏è",
          "üßãü•§üßãü•õüç∑",
          "üç¨üç≠üßÅüéÇüç°",
          "üç®üßâüç∫‚òïüçª",
          "ü•™ü•ßüç¶üç•üçö",
          "ü´ñ‚òïüçπüç∑ü•õ",
          "‚òïüßÉüç©üç¶üçô",
          "üçÅüåæüíÆüçÇüåø",
          "üå®Ô∏èüå•Ô∏è‚õàÔ∏èüå©Ô∏èüåßÔ∏è",
          "üå∑üèµÔ∏èüå∏üå∫üíê",
          "üíÆüåºüåªüçÄüçÅ",
          "üßüü¶∏ü¶πüßôüë∏",
          "üßÖüç†ü•ïüåΩü•¶",
          "üê∑üêπüê≠üê®üêª‚Äç‚ùÑÔ∏è",
          "ü¶ãüêáüêÄüêàüêà‚Äç‚¨õ",
          "üåºüå≥üå≤üå¥üåµ",
          "ü•©üçãüçêüçàüçá",
          "üç¥üçΩÔ∏èüî™üç∂ü•É",
          "üïåüè∞üè©‚õ©Ô∏èüè©",
          "üéâüéäüéàüéÇüéÄ",
          "ü™¥üåµüå¥üå≥üå≤",
          "üéÑüéãüéçüéëüéé",
          "ü¶Öü¶úüïäÔ∏èü¶§ü¶¢",
          "ü¶§ü¶©ü¶öü¶Éü¶Ü",
          "üê¨ü¶≠ü¶àüêãüê≥",
          "üêîüêüüê†üê°ü¶ê",
          "ü¶©ü¶Äü¶ëüêôü¶™",
          "üê¶ü¶Çüï∑Ô∏èüï∏Ô∏èüêö",
          "ü•™üç∞ü•ßüç®üç®",
          "‚úùÔ∏èü©∑√ö",
        ]

TAGMES = [ " **‚û† …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ üåö** ",
           " **‚û† Ghost üëª Dreams** ",
           " **‚û† Poi thongu ipoüëª** ",
           " **‚û† en feeling uh pathuklam poi thongu  üòäüôå** ",
           " **‚û† ·¥ç·¥ú·¥ç·¥ç è inga parunga inum thongla pola iva  üòú** ",
           " **‚û† ·¥ò·¥Ä·¥ò·¥Ä  è·¥á ·¥Ö·¥á·¥ã ú·¥è ·¥Ä·¥ò…¥·¥á  ô·¥á·¥õ·¥á ·¥ã·¥è  Ä·¥Ä·¥Ä·¥õ  ô ú·¥Ä Ä ·¥ò ú·¥è…¥·¥á ·¥Ñ ú·¥Ä ü·¥Ä  Ä ú·¥Ä  ú·¥Ä…™ ü§≠** ",
           " **‚û† phone pathu pothum poi thongu mangos manda üëª ** ",
           " **‚û†  Dont trust any ü™ê Gn** ",
           " **‚û† …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ s·¥°·¥á·¥á·¥õ ·¥Ö Ä·¥á·¥Ä·¥ç ·¥õ·¥Ä·¥ã·¥á ·¥Ñ·¥Ä Ä·¥á..?? ‚ú®** ",
           " **‚û† rel√†x freind , …¢…¥..?? üåå** ",
           " **‚û† amma una 9 ku poi thonga sona ena panra inumüï¶** ",
           " **‚û† naliku scholl ponu poi thongu  üè´** ",
           " **‚û†  …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ soniya enku ?? üòí** ",
           " **‚û† Oi Cute baby üçº Good night** ",
           " **‚û† ·¥ä·¥Ä…¥·¥á·¥ç·¥Ä…¥, …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ üå∑** ",
           " **‚û† un nala mansku natha nadakum poi thongu üèµÔ∏è** ",
           " **‚û†  ú·¥á ü ü·¥è ·¥ä…™ …¥·¥Ä·¥ç·¥Äs·¥õ·¥á, …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ üçÉ** ",
           " **‚û†  POI Thongu past is past ‚òÉÔ∏è** ",
           " **‚û† …¢·¥è·¥è·¥Ö …¥…™…¢ út SNOWMAN ‚õÑ** ",
           " **‚û† Ena Inum tele etha ponu kita urtlum searching ha poi thongu  üòÅ** ",
           " **‚û† Noting is permanent gn  üåÑ** ",
           " **‚û† …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ  ô Ä…™…¢ ú·¥õ“ì·¥ú ü ü …¥…™…¢ ú·¥õ ü§≠** ",
           " **‚û† ·¥õ ú·¥á …¥…™…¢ ú·¥õ  ú·¥Äs “ì·¥Ä ü ü·¥á…¥, ·¥õ ú·¥á ·¥Ö·¥Ä è …™s ·¥Ö·¥è…¥·¥á,, ·¥õ ú·¥á ·¥ç·¥è·¥è…¥  ú·¥Äs ·¥õ·¥Ä·¥ã·¥á…¥ ·¥õ ú·¥á ·¥ò ü·¥Ä·¥Ñ·¥á ·¥è“ì ·¥õ ú·¥á s·¥ú…¥... üòä** ",
           " **‚û† ·¥ç·¥Ä è ·¥Ä ü ü  è·¥è·¥ú Ä ·¥Ö Ä·¥á·¥Ä·¥çs ·¥Ñ·¥è·¥ç·¥á ·¥õ Ä·¥ú·¥á ‚ù§Ô∏è** ",
           " **‚û† …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ s·¥ò Ä…™…¥·¥ã ü·¥ás s·¥°·¥á·¥á·¥õ ·¥Ö Ä·¥á·¥Ä·¥ç üíö** ",
           " **‚û† …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ kuti sathane ü•±** ",
           " **‚û† ·¥Ö·¥á·¥Ä Ä “ì Ä…™·¥á…¥·¥Ö …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ üí§** ",
           " **‚û†  ô·¥Ä ô è Romba fell pantha olunga poi thonguü´†** ",
           " **‚û† olunga poi thongu üòí** ",
           " **‚û† ·¥Ñ ü·¥ès·¥á  è·¥è·¥ú Ä ·¥á è·¥ás s…¥·¥ú…¢…¢ ü·¥á ·¥ú·¥ò ·¥õ…™…¢ ú·¥õ,, ·¥Ä…¥·¥Ö  Ä·¥á·¥ç·¥á·¥ç ô·¥á Ä ·¥õ ú·¥Ä·¥õ ·¥Ä…¥…¢·¥á üs, ·¥°…™ ü ü ·¥°·¥Ä·¥õ·¥Ñ ú ·¥è·¥†·¥á Ä  è·¥è·¥ú ·¥õ·¥è…¥…™…¢ ú·¥õ... üí´** ",
           ]

VC_TAG = [ "**‚û† …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥güê±**",
         "**¬ª Vc la un alu w8ng pola  üå§Ô∏è**",
         "**‚û† …¢·¥ç  ô·¥Ä ô è, Itha tea Venuma ‚òï**",
         "**‚û† en loook uh vc po ü•≤**",
         "**‚û† …¢·¥ç, Ena sombari thnama iruka üòí**",
         "**‚û†  vc va machee **",
         "**‚û† ·¥è“ì“ì…™ce Ilya Unku  üè£**",
         "**‚û† …¢·¥ç ·¥Ö·¥ès·¥õ, ena venummmm **",
         "**‚û†  ô·¥Ä ô è Time ayirchu Elmbuuu üïñ**",
         "**‚û† Tea or Coffee ‚òï ‚ú®**",
         "**‚û† …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢  ú·¥Ä·¥†·¥á ·¥Ä …¥…™·¥Ñ·¥á ·¥Ö·¥Ä è... üåÑ**",
         "**‚û† …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢,  ú·¥Ä·¥†·¥á ·¥Ä …¢·¥è·¥è·¥Ö ·¥Ö·¥Ä è... ü™¥**",
         "**‚û† …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢,  ú·¥è·¥° ·¥Ä Ä·¥á  è·¥è·¥ú  ô·¥Ä ô è üòá**",
         "**‚û† Gm Romba cute iruka nee üòµ‚Äçüí´**",
         "**‚û† Ena Thukum pogilya inummm  üòè**",
         "**‚û†  ô·¥Ä ô·¥ú …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ elmbu Velila poi paru. üëª**",
         "**‚û† Join > @Td_networkk üéß**",
         "**‚û† Ne superman Ivlo sekirom elumbita .. üòÖ**",
         "**‚û† …¢·¥ç  ô·¥ás·¥õ…™·¥á,  ô Ä·¥á·¥Ä·¥ã“ì·¥Äs·¥õ saptiya... üç≥**",
        ]


@app.on_message(filters.command(["gntag", "tagmember" ], prefixes=["/", "@", "#"]))
async def mentionall(client, message):
    chat_id = message.chat.id
    if message.chat.type == ChatType.PRIVATE:
        return await message.reply("‡πè ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è “ì·¥è Ä …¢ Ä·¥è·¥ú·¥òs.")

    is_admin = False
    try:
        participant = await client.get_chat_member(chat_id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("‡πè  è·¥è·¥ú ·¥Ä Ä·¥á …¥·¥è·¥õ ·¥Ä·¥Ö·¥ç…™…¥  ô·¥Ä ô è, ·¥è…¥ ü è ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ñ·¥Ä…¥ ·¥õ·¥Ä…¢ ·¥ç·¥á·¥ç ô·¥á Äs. ")

    if message.reply_to_message and message.text:
        return await message.reply("/tagall …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ ·¥õ è·¥ò·¥á  ü…™·¥ã·¥á ·¥õ ú…™s /  Ä·¥á·¥ò ü è ·¥Ä…¥ è ·¥ç·¥áss·¥Ä…¢·¥á …¥·¥áx·¥õ ·¥õ…™·¥ç·¥á  ô·¥è·¥õ ·¥õ·¥Ä…¢…¢…™…¥…¢...")
    elif message.text:
        mode = "text_on_cmd"
        msg = message.text
    elif message.reply_to_message:
        mode = "text_on_reply"
        msg = message.reply_to_message
        if not msg:
            return await message.reply("/tagall …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ ·¥õ è·¥ò·¥á  ü…™·¥ã·¥á ·¥õ ú…™s /  Ä·¥á·¥ò ü è ·¥Ä…¥ è ·¥ç·¥áss·¥Ä…¢·¥á …¥·¥áx·¥õ ·¥õ…™·¥ç·¥á “ì·¥è·¥õ ·¥õ·¥Ä…¢…¢…™…¥…¢...")
    else:
        return await message.reply("/tagall …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ ·¥õ è·¥ò·¥á  ü…™·¥ã·¥á ·¥õ ú…™s /  Ä·¥á·¥ò ü è ·¥Ä…¥ è ·¥ç·¥áss·¥Ä…¢·¥á …¥·¥áx·¥õ ·¥õ…™·¥ç·¥á  ô·¥è·¥õ ·¥õ·¥Ä…¢…¢…™…¥…¢...")
    if chat_id in spam_chats:
        return await message.reply("‡πè ·¥ò ü·¥á·¥Äs·¥á ·¥Ä·¥õ “ì…™ Äs·¥õ s·¥õ·¥è·¥ò  Ä·¥ú…¥…¥…™…¥…¢ ·¥ç·¥á…¥·¥õ…™·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss...")
    spam_chats.append(chat_id)
    usrnum = 0
    usrtxt = ""
    async for usr in client.get_chat_members(chat_id):
        if not chat_id in spam_chats:
            break
        if usr.user.is_bot:
            continue
        usrnum += 1
        usrtxt += f"[{usr.user.first_name}](tg://user?id={usr.user.id}) "

        if usrnum == 1:
            if mode == "text_on_cmd":
                txt = f"{usrtxt} {random.choice(TAGMES)}"
                await client.send_message(chat_id, txt)
            elif mode == "text_on_reply":
                await msg.reply(f"[{random.choice(EMOJI)}](tg://user?id={usr.user.id})")
            await asyncio.sleep(4)
            usrnum = 0
            usrtxt = ""
    try:
        spam_chats.remove(chat_id)
    except:
        pass


@app.on_message(filters.command(["gmtag"], prefixes=["/", "@", "#"]))
async def mention_allvc(client, message):
    chat_id = message.chat.id
    if message.chat.type == ChatType.PRIVATE:
        return await message.reply("‡πè ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è “ì·¥è Ä …¢ Ä·¥è·¥ú·¥òs.")

    is_admin = False
    try:
        participant = await client.get_chat_member(chat_id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("üòí  è·¥è·¥ú ·¥Ä Ä·¥á …¥·¥è·¥õ ·¥Ä·¥Ö·¥ç…™…¥  ô·¥Ä ô è, ·¥è…¥ ü è ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ñ·¥Ä…¥ ·¥õ·¥Ä…¢ ·¥ç·¥á·¥ç ô·¥á Äs. ")
    if chat_id in spam_chats:
        return await message.reply("ü•∫ ·¥ò ü·¥á·¥Äs·¥á ·¥Ä·¥õ “ì…™ Äs·¥õ s·¥õ·¥è·¥ò  Ä·¥ú…¥…¥…™…¥…¢ ·¥ç·¥á…¥·¥õ…™·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss...")
    spam_chats.append(chat_id)
    usrnum = 0
    usrtxt = ""
    async for usr in client.get_chat_members(chat_id):
        if not chat_id in spam_chats:
            break
        if usr.user.is_bot:
            continue
        usrnum += 1
        usrtxt += f"[{usr.user.first_name}](tg://user?id={usr.user.id}) "

        if usrnum == 1:
            txt = f"{usrtxt} {random.choice(VC_TAG)}"
            await client.send_message(chat_id, txt)
            await asyncio.sleep(4)
            usrnum = 0
            usrtxt = ""
    try:
        spam_chats.remove(chat_id)
    except:
        pass



@app.on_message(filters.command(["gmstop", "gnstop", "cancle"]))
async def cancel_spam(client, message):
    if not message.chat.id in spam_chats:
        return await message.reply("ü•≤ ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ü è …™'·¥ç …¥·¥è·¥õ ·¥õ·¥Ä…¢…¢…™…¥…¢  ô·¥Ä ôe.")
    is_admin = False
    try:
        participant = await client.get_chat_member(message.chat.id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("‡πè  è·¥è·¥ú ·¥Ä Ä·¥á …¥·¥è·¥õ ·¥Ä·¥Ö·¥ç…™…¥  ô·¥Ä ôe, ·¥è…¥ ü è ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ñ·¥Ä…¥ ·¥õ·¥Ä…¢ ·¥ç·¥á·¥ç ô·¥á Äs.")
    else:
        try:
            spam_chats.remove(message.chat.id)
        except:
            pass
        return await message.reply("‡πè ·¥ç·¥á…¥·¥õ…™·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss s·¥õ·¥è·¥ò·¥ò·¥á·¥Ö ‡πè")


